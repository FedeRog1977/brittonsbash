{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nconst WeatherHourly = _ref => {\n  _s();\n  let {\n    latIn,\n    lonIn\n  } = _ref;\n  const [result, setResult] = useState([]);\n  useEffect(() => {\n    const url = \"http://api.openweathermap.org/data/3.0/onecall?\";\n    const lat = `${latIn}`;\n    const lon = `${lonIn}`;\n    const appid = \"8cd20943bde0b48ee5d7a9b271ac1f43\";\n    const units = \"metric\";\n    const lang = \"en\";\n    const apiCall = async () => {\n      const data = await fetch(`${url}lat=${lat}&lon=${lon}&appid=${appid}&units=${units}&lang=${lang}`, {\n        method: \"GET\"\n      });\n      const weatherData = await data.json();\n      setResult(weatherData.hourly);\n    };\n    apiCall();\n  }, [latIn, lonIn]);\n  return result;\n};\n_s(WeatherHourly, \"HaEOteC6yG5HMVXXpmZ2rXfh/XA=\");\n_c = WeatherHourly;\nexport default WeatherHourly;\nvar _c;\n$RefreshReg$(_c, \"WeatherHourly\");","map":{"version":3,"names":["useEffect","useState","WeatherHourly","latIn","lonIn","result","setResult","url","lat","lon","appid","units","lang","apiCall","data","fetch","method","weatherData","json","hourly"],"sources":["/home/lewisb/Documents/Repos/brittonsbash/src/components/utils/weather/WeatherHourlyCall.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { hourlyProps } from \"./WeatherProps\";\n\nconst WeatherHourly = ({ latIn, lonIn }: any) => {\n    const [result, setResult] = useState<hourlyProps[]>([]);\n\n    useEffect(() => {\n        const url = \"http://api.openweathermap.org/data/3.0/onecall?\";\n        const lat = `${latIn}`;\n        const lon = `${lonIn}`;\n        const appid = \"8cd20943bde0b48ee5d7a9b271ac1f43\";\n        const units = \"metric\";\n        const lang = \"en\";\n\n        const apiCall = async () => {\n            const data = await fetch(\n                `${url}lat=${lat}&lon=${lon}&appid=${appid}&units=${units}&lang=${lang}`,\n                { method: \"GET\" }\n            );\n            const weatherData = await data.json();\n            setResult(weatherData.hourly);\n        };\n\n        apiCall();\n    }, [latIn, lonIn]);\n\n    return (result);\n};\n\nexport default WeatherHourly;"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAG3C,MAAMC,aAAa,GAAG,QAA2B;EAAA;EAAA,IAA1B;IAAEC,KAAK;IAAEC;EAAW,CAAC;EACxC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAAgB,EAAE,CAAC;EAEvDD,SAAS,CAAC,MAAM;IACZ,MAAMO,GAAG,GAAG,iDAAiD;IAC7D,MAAMC,GAAG,GAAI,GAAEL,KAAM,EAAC;IACtB,MAAMM,GAAG,GAAI,GAAEL,KAAM,EAAC;IACtB,MAAMM,KAAK,GAAG,kCAAkC;IAChD,MAAMC,KAAK,GAAG,QAAQ;IACtB,MAAMC,IAAI,GAAG,IAAI;IAEjB,MAAMC,OAAO,GAAG,YAAY;MACxB,MAAMC,IAAI,GAAG,MAAMC,KAAK,CACnB,GAAER,GAAI,OAAMC,GAAI,QAAOC,GAAI,UAASC,KAAM,UAASC,KAAM,SAAQC,IAAK,EAAC,EACxE;QAAEI,MAAM,EAAE;MAAM,CAAC,CACpB;MACD,MAAMC,WAAW,GAAG,MAAMH,IAAI,CAACI,IAAI,EAAE;MACrCZ,SAAS,CAACW,WAAW,CAACE,MAAM,CAAC;IACjC,CAAC;IAEDN,OAAO,EAAE;EACb,CAAC,EAAE,CAACV,KAAK,EAAEC,KAAK,CAAC,CAAC;EAElB,OAAQC,MAAM;AAClB,CAAC;AAAC,GAxBIH,aAAa;AAAA,KAAbA,aAAa;AA0BnB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}